name: catalog

on:
  push:
    branches: [ main, dar-manager ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create-catalog:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # From: https://lannonbr.com/blog/2019-12-09-git-commit-in-actions
      # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Install required packages
        run:  sudo apt install -y dar dar-static  par2 git

      - name: create/populate/test/restore multiple catalogs
        run: |
          chmod +x $GITHUB_WORKSPACE/test/test-create-catalog.sh
          $GITHUB_WORKSPACE/test/test-create-catalog.sh
  create-single-catalog:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # From: https://lannonbr.com/blog/2019-12-09-git-commit-in-actions
      # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Install required packages
        run:  sudo apt install -y dar dar-static  par2 git

      - name: create single catalog
        run: |
          chmod +x $GITHUB_WORKSPACE/test/test-create-single-catalog.sh
          $GITHUB_WORKSPACE/test/test-create-single-catalog.sh
  populate-single-catalog:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # From: https://lannonbr.com/blog/2019-12-09-git-commit-in-actions
      # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Install required packages
        run:  sudo apt install -y dar dar-static  par2 git

      - name: populate single catalog
        run: |
          chmod +x $GITHUB_WORKSPACE/test/test-populate-single-catalog.sh
          $GITHUB_WORKSPACE/test/test-populate-single-catalog.sh
  add-archive-to-catalog:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # From: https://lannonbr.com/blog/2019-12-09-git-commit-in-actions
      # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Install required packages
        run:  sudo apt install -y dar dar-static  par2 git

      - name: populate single catalog
        run: |
          chmod +x $GITHUB_WORKSPACE/test/test-populate-catalog-single-archive.sh
          $GITHUB_WORKSPACE/test/test-populate-catalog-single-archive.sh
  remove-archive-from-catalog:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # From: https://lannonbr.com/blog/2019-12-09-git-commit-in-actions
      # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Install required packages
        run:  sudo apt install -y dar dar-static  par2 git

      - name: remove 1 entry from a catalog
        run: |
          chmod +x $GITHUB_WORKSPACE/test/test-remove-single-archive-from-catalog.sh
          $GITHUB_WORKSPACE/test/test-remove-single-archive-from-catalog.sh
          
